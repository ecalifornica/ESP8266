From 50e6c163bd7dc259d6a54d689567fb02a515b2bb Mon Sep 17 00:00:00 2001
From: Robert Queenin <queenin@gmail.com>
Date: Wed, 3 Aug 2016 23:20:05 -0700
Subject: [PATCH] Hello world with the Adafruit example code.

---
 examples/ESP8266/ESP8266.ino | 120 +++++++++++++++++++++++++++++++++++++++----
 1 file changed, 111 insertions(+), 9 deletions(-)

diff --git a/examples/ESP8266/ESP8266.ino b/examples/ESP8266/ESP8266.ino
index 165a362..eda1bf6 100644
--- a/examples/ESP8266/ESP8266.ino
+++ b/examples/ESP8266/ESP8266.ino
@@ -11,13 +11,31 @@
 #include <ESP8266WiFi.h>
 #include "Adafruit_IO_Client.h"
 
+#include <Wire.h>
+
+#include <Adafruit_Sensor.h>
+#include <Adafruit_LSM303_U.h>
+#include <Adafruit_L3GD20_U.h>
+#include <Adafruit_9DOF.h>
+
+#include <Adafruit_INA219.h>
 
 // Configure WiFi access point details.
-#define WLAN_SSID  "...your SSID..."
-#define WLAN_PASS  "...your password..."
+#define WLAN_SSID  "Fog City Swagger"
+#define WLAN_PASS  "adaptevolvesucceed758"
 
 // Configure Adafruit IO access.
-#define AIO_KEY    "...your Adafruit IO key value ..."
+#define AIO_KEY    "dc44e7f1875642528d3ca8e5d2f740c1"
+
+Adafruit_INA219 ina219;
+
+/* Assign a unique ID to the sensors */
+Adafruit_9DOF dof = Adafruit_9DOF();
+Adafruit_LSM303_Accel_Unified accel = Adafruit_LSM303_Accel_Unified(30301);
+Adafruit_LSM303_Mag_Unified mag = Adafruit_LSM303_Mag_Unified(30302);
+
+/* Update this with the correct SLP for accurate altitude measurements */
+float seaLevelPressure = SENSORS_PRESSURE_SEALEVELHPA;
 
 
 // Create an ESP8266 WiFiClient class to connect to the AIO server.
@@ -42,6 +60,77 @@ Adafruit_IO_Feed testFeed = aio.getFeed("esptestfeed");
 // Global state to increment a number and send it to the feed.
 unsigned int count = 0;
 
+
+void initIMU() {
+  if(!accel.begin())
+  {
+    /* There was a problem detecting the LSM303 ... check your connections */
+    Serial.println(F("Ooops, no LSM303 detected ... Check your wiring!"));
+    while(1);
+  }
+  if(!mag.begin())
+  {
+    /* There was a problem detecting the LSM303 ... check your connections */
+    Serial.println("Ooops, no LSM303 detected ... Check your wiring!");
+    while(1);
+  }
+}
+
+
+void readIMU() {
+  sensors_event_t accel_event;
+  sensors_event_t mag_event;
+  sensors_vec_t   orientation;
+
+  /* Calculate pitch and roll from the raw accelerometer data */
+  accel.getEvent(&accel_event);
+  if (dof.accelGetOrientation(&accel_event, &orientation))
+  {
+    /* 'orientation' should have valid .roll and .pitch fields */
+    Serial.print(F("Roll: "));
+    Serial.print(orientation.roll);
+    Serial.print(F("; "));
+    Serial.print(F("Pitch: "));
+    Serial.print(orientation.pitch);
+    Serial.print(F("; "));
+  }
+  
+  /* Calculate the heading using the magnetometer */
+  mag.getEvent(&mag_event);
+  if (dof.magGetOrientation(SENSOR_AXIS_Z, &mag_event, &orientation))
+  {
+    /* 'orientation' should have valid .heading data now */
+    Serial.print(F("Heading: "));
+    Serial.print(orientation.heading);
+    Serial.print(F("; "));
+  }
+
+  Serial.println(F(""));
+}
+
+
+
+float readINA219() {
+  float shuntvoltage = 0;
+  float busvoltage = 0;
+  float current_mA = 0;
+  float loadvoltage = 0;
+
+  shuntvoltage = ina219.getShuntVoltage_mV();
+  busvoltage = ina219.getBusVoltage_V();
+  current_mA = ina219.getCurrent_mA();
+  loadvoltage = busvoltage + (shuntvoltage / 1000);
+
+  Serial.print("Bus Voltage:   "); Serial.print(busvoltage); Serial.println(" V");
+  Serial.print("Shunt Voltage: "); Serial.print(shuntvoltage); Serial.println(" mV");
+  Serial.print("Load Voltage:  "); Serial.print(loadvoltage); Serial.println(" V");
+  Serial.print("Current:       "); Serial.print(current_mA); Serial.println(" mA");
+  Serial.println("");
+
+  return busvoltage;
+}
+
+
 void setup() {
   // Setup serial port access.
   Serial.begin(115200);
@@ -67,26 +156,39 @@ void setup() {
   // client class, but good practice).
   aio.begin();
 
+  uint32_t currentFrequency;
+  ina219.begin();
+
+  initIMU();
+
+  pinMode(12, OUTPUT);
+
   Serial.println(F("Ready!"));
 }
 
 void loop() {
+  digitalWrite(12, HIGH);
+  delay(100);
+  digitalWrite(12, LOW);
+  float barfer = readINA219();
+  readIMU();
+  
   // Increment the count value and write it to the feed.
   count += 1;
   // To write a value just call the feed's send function and pass it the value.
   // Send will create the feed on Adafruit IO if it doesn't already exist and
   // then add the value to it.  Send returns a boolean that's true if it works
   // and false if it fails for some reason.
-  if (testFeed.send(count)) {
-    Serial.print(F("Wrote value to feed: ")); Serial.println(count, DEC);
+  if (testFeed.send(barfer)) {
+    Serial.print(F("Wrote value to feed: ")); Serial.println(barfer, DEC);
   }
   else {
     Serial.println(F("Error writing value to feed!"));
   }
 
   // Now wait 10 seconds and read the current feed value.
-  Serial.println(F("Waiting 10 seconds and then reading the feed value."));
-  delay(10000);
+  //Serial.println(F("Waiting 10 seconds and then reading the feed value."));
+  //delay(15000);
 
   // To read the latest feed value call the receive function on the feed.
   // The returned object will be a FeedData instance and you can check if it's
@@ -116,6 +218,6 @@ void loop() {
   }
 
   // Now wait 10 more seconds and repeat.
-  Serial.println(F("Waiting 10 seconds and then writing a new feed value."));
-  delay(10000);
+  //Serial.println(F("Waiting 10 seconds and then writing a new feed value."));
+  delay(15000);
 }
-- 
2.7.4 (Apple Git-66)

